# Adapted from "https://github.com/starship/starship"
# @see https://github.com/starship/starship/blob/82f68a0a393efc5d4bf38c13b64448d89e4bacd0/.github/workflows/deploy.yml

name: Deploy
on:
  push:
    tags:
      - "v*"

jobs:
  # Build sources for every OS
  github_build:
    name: Build release binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          # - target: x86_64-unknown-linux-gnu
          #   os: ubuntu-latest
          #   name: semantic-scholar-mcp-x86_64-unknown-linux-gnu.tar.gz

          # - target: x86_64-unknown-linux-musl
          #   os: ubuntu-latest
          #   name: semantic-scholar-mcp-x86_64-unknown-linux-musl.tar.gz

          # - target: i686-unknown-linux-musl
          #   os: ubuntu-latest
          #   name: semantic-scholar-mcp-i686-unknown-linux-musl.tar.gz

          # - target: aarch64-unknown-linux-musl
          #   os: ubuntu-latest
          #   name: semantic-scholar-mcp-aarch64-unknown-linux-musl.tar.gz

          # - target: arm-unknown-linux-musleabihf
          #   os: ubuntu-latest
          #   name: semantic-scholar-mcp-arm-unknown-linux-musleabihf.tar.gz

          - target: x86_64-apple-darwin
            os: macOS-14
            name: semantic-scholar-mcp-x86_64-apple-darwin.tar.gz

          - target: aarch64-apple-darwin
            os: macOS-14
            name: semantic-scholar-mcp-aarch64-apple-darwin.tar.gz

          # - target: x86_64-pc-windows-msvc
          #   os: windows-latest
          #   name: semantic-scholar-mcp-x86_64-pc-windows-msvc.zip

          # - target: i686-pc-windows-msvc
          #   os: windows-latest
          #   name: semantic-scholar-mcp-i686-pc-windows-msvc.zip

          # - target: aarch64-pc-windows-msvc
          #   os: windows-latest
          #   name: semantic-scholar-mcp-aarch64-pc-windows-msvc.zip

          # - target: x86_64-unknown-freebsd
          #   os: ubuntu-latest
          #   name: semantic-scholar-mcp-x86_64-unknown-freebsd.tar.gz

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2.4.0
        with:
          submodules: true

      # Cache files between builds
      - name: Setup | Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.target }}

      - name: Build | Build
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --release --locked --target ${{ matrix.target }}
          use-cross: ${{ matrix.os == 'ubuntu-latest' }}

      # - name: Post Build | Prepare artifacts [Windows]
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     cd target/${{ matrix.target }}/release
      #     strip semantic-scholar-mcp.exe
      #     7z a ../../../${{ matrix.name }} semantic-scholar-mcp.exe
      #     cd -

      - name: Post Build | Prepare artifacts [-nix]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          # TODO: investigate better cross platform stripping
          strip semantic-scholar-mcp || true
          tar czvf ../../../${{ matrix.name }} semantic-scholar-mcp
          cd -

      - name: Deploy | Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  # Create GitHub release with Rust build targets and release notes
  github_release:
    name: Create GitHub Release
    needs: github_build
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2.4.0
        with:
          submodules: true

      # - name: Setup | Go
      #   uses: actions/setup-go@v2
      #   with:
      #     go-version: "^1.15.7"

      - name: Setup | Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: semantic-scholar-mcp-*
          merge-multiple: true

      - name: Setup | Checksums
        run: for file in semantic-scholar-mcp-*; do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done

      # - name: Setup | Release notes
      #   run: |
      #     GO111MODULE=on go get github.com/git-chglog/git-chglog/cmd/git-chglog@0.9.1
      #     git-chglog -c .github/chglog/release.yml $(git describe --tags) > RELEASE.md

      - name: Build | Publish
        uses: softprops/action-gh-release@v2
        with:
          files: semantic-scholar-mcp-*
          # body_path: RELEASE.md

  # Publish semantic-scholar-mcp to Crates.io
  # cargo_publish:
  #   name: Publish Cargo Package
  #   runs-on: ubuntu-latest
  #   needs: github_release
  #   steps:
  #     - name: Setup | Checkout
  #       uses: actions/checkout@v2.4.0
  #       with:
  #         submodules: true

  #     - name: Setup | Rust
  #       uses: actions-rs/toolchain@v1.0.7
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #         override: true

  #     - name: Build | Publish
  #       run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
